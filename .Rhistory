y = "",
x = "% of population reached") +
plot_layout(guides = "collect") &
theme(legend.position = "bottom")
eq %>%
left_join(hno %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
admin3pcode),
by = "admin3pcode") %>%
filter(admin3pcode %in% nw_pcode3 &
district %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate, district, sub_district, admin3pcode) %>%
summarise(wounded_dead = sum(wounded_dead, na.rm = TRUE),
damaged_houses = sum(damaged_houses, na.rm = TRUE)) %>%
left_join(hno %>%
filter(admin3pcode %in% nw_pcode3 &
admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(admin3pcode) %>%
summarise(population = sum(total_population, na.rm = TRUE)),
by = "admin3pcode") %>%
mutate(wounded_dead_100k = round(wounded_dead / population * 100000, digits = 2),
damaged_houses_100k = round(damaged_houses / population * 100000, digits = 2)) %>%
left_join(cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)),
by = "admin3pcode") %>%
ggplot(aes(x = population, y = beneficiaries)) +
geom_point(aes(size = wounded_dead_100k)) +
geom_text_repel(aes(label = sub_district),
point.padding = .5,
segment.color = "grey50", size = 3) +
scale_x_log10(breaks = c(0, 3000, 10000, 30000, 100000, 300000, 1000000),
labels = comma) +
scale_y_log10(breaks = c(0, 1000, 3000, 10000, 30000, 100000),
labels = comma) +
scale_size(breaks = c(0, 100, 500, 1000, 3000)) +
geom_smooth(method = "lm", se = FALSE, colour = "blue", size = .5) +
labs(title = "Population and MPC beneficiaries by sub-district",
subtitle = "Size indicates dead/wounded per 100,0000",
x = "Population",
y = "Beneficiaries",
size = "Dead/wounded\nper 100k",
caption = "Data from CWG, FSL and ACU") +
theme(plot.caption = element_text(hjust = .5))
eq %>%
left_join(hno %>%
select(governorate = admin1name_en,
district = admin2name_en,
sub_district = admin3name_en,
admin3pcode),
by = "admin3pcode") %>%
filter(admin3pcode %in% nw_pcode3 &
district %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(governorate, district, sub_district, admin3pcode) %>%
summarise(wounded_dead = sum(wounded_dead, na.rm = TRUE),
damaged_houses = sum(damaged_houses, na.rm = TRUE)) %>%
left_join(hno %>%
filter(admin3pcode %in% nw_pcode3 &
admin2name_en %in% c("Harim", "Idleb", "Jisr-Ash-Shugur", "Ariha",
"Tell Abiad",
"Afrin", "Jebel Saman", "A'zaz", "Jarablus", "Al Bab")) %>%
group_by(admin3pcode) %>%
summarise(population = sum(total_population, na.rm = TRUE)),
by = "admin3pcode") %>%
mutate(wounded_dead_100k = round(wounded_dead / population * 100000, digits = 2),
damaged_houses_100k = round(damaged_houses / population * 100000, digits = 2)) %>%
left_join(cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(admin3pcode) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)),
by = "admin3pcode") %>%
ggplot(aes(x = damaged_houses, y = wounded_dead)) +
geom_point(aes(size = wounded_dead_100k,
colour = beneficiaries)) +
geom_text_repel(aes(label = sub_district),
point.padding = .5,
segment.color = "grey50", size = 3) +
scale_x_log10(labels = comma) +
scale_y_log10(labels = comma) +
scale_colour_viridis(option = "mako", direction = -1,
labels = comma) +
scale_size(breaks = c(0, 100, 500, 1000, 3000)) +
labs(x = "Number of damaged houses",
y = "Number of wounded and dead",
title = "Magnitude of earthquake impacts by sub-district",
subtitle = "Size shows severity (wounded/dead per 100k) and colour shows beneficiaries",
size = "Wounded/dead\nper 100k",
colour = "Beneficiaries",
caption = "Data from CWG, FSL and ACU")
cbr %>%
filter(project_status == "Planned" & str_detect(cluster, "Multipurpose")) %>%
filter(governorate == "Aleppo") %>%
group_by(sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
filter(beneficiaries > 0) %>%
ggplot(aes(x = beneficiaries, y = fct_reorder(sub_district, beneficiaries))) +
geom_col(fill = "#41b6c4") +
geom_text(aes(label = comma(beneficiaries)), hjust = "inward") +
scale_x_continuous(labels = unit_format(unit = "K", scale = 1e-3, accuracy = 1)) +
labs(title = "Aleppo",
x = "",
y = "") +
cbr %>%
filter(project_status == "Planned" & str_detect(cluster, "Multipurpose")) %>%
filter(governorate == "Idleb" & !is.na(admin3pcode)) %>%
group_by(sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
filter(beneficiaries > 0) %>%
ggplot(aes(x = beneficiaries, y = fct_reorder(sub_district, beneficiaries))) +
geom_col(fill = "lightgoldenrod") +
geom_text(aes(label = comma(beneficiaries)), hjust = "inward") +
scale_x_continuous(labels = unit_format(unit = "K", scale = 1e-3, accuracy = 1)) +
labs(title = "Planned beneficiaries -- Idleb",
x = "Planned beneficiaries",
y = "")  +
plot_layout(widths = c(1.1, 1.3))
cbr %>%
filter(project_status == "Planned" & str_detect(cluster, "Multipurpose")) %>%
filter(governorate == "Aleppo") %>%
group_by(sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
filter(beneficiaries > 0) %>%
ggplot(aes(x = beneficiaries, y = fct_reorder(sub_district, beneficiaries))) +
geom_col(fill = "#41b6c4") +
geom_text(aes(label = comma(beneficiaries)), hjust = "inward") +
scale_x_continuous(labels = unit_format(unit = "K", scale = 1e-3, accuracy = 1)) +
labs(title = "Aleppo",
x = "",
y = "") +
cbr %>%
filter(project_status == "Planned" & str_detect(cluster, "Multipurpose")) %>%
filter(governorate == "Idleb" & !is.na(admin3pcode)) %>%
group_by(sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
filter(beneficiaries > 0) %>%
ggplot(aes(x = beneficiaries, y = fct_reorder(sub_district, beneficiaries))) +
geom_col(fill = "lightgoldenrod") +
geom_text(aes(label = comma(beneficiaries)), hjust = "inward") +
scale_x_continuous(labels = unit_format(unit = "K", scale = 1e-3, accuracy = 1)) +
labs(title = "Planned beneficiaries -- Idleb",
x = "Planned beneficiaries",
y = "")  +
plot_layout(widths = c(1.1, 1))
cbr %>%
filter(project_status == "Planned" & str_detect(cluster, "Multipurpose")) %>%
filter(governorate == "Aleppo") %>%
group_by(sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
filter(beneficiaries > 0) %>%
ggplot(aes(x = beneficiaries, y = fct_reorder(sub_district, beneficiaries))) +
geom_col(fill = "#41b6c4") +
geom_text(aes(label = comma(beneficiaries)), hjust = "inward") +
scale_x_continuous(labels = unit_format(unit = "K", scale = 1e-3, accuracy = 1)) +
labs(title = "Aleppo",
x = "",
y = "") +
cbr %>%
filter(project_status == "Planned" & str_detect(cluster, "Multipurpose")) %>%
filter(governorate == "Idleb" & !is.na(admin3pcode)) %>%
group_by(sub_district) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
filter(beneficiaries > 0) %>%
ggplot(aes(x = beneficiaries, y = fct_reorder(sub_district, beneficiaries))) +
geom_col(fill = "lightgoldenrod") +
geom_text(aes(label = comma(beneficiaries)), hjust = "inward") +
scale_x_continuous(labels = unit_format(unit = "K", scale = 1e-3, accuracy = 1)) +
labs(title = "Planned beneficiaries -- Idleb",
x = "Planned beneficiaries",
y = "")  +
plot_layout(widths = c(1.15, 1))
cbr %>%
filter(str_detect(cluster, "Multipurpose")) %>%
group_by(project_status) %>%
summarise(partners = n_distinct(implementing_partner),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("14 partners have reported planned activities") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
cbr %>%
filter(str_detect(cluster, "Multipurpose") & previously_assisted == "No") %>%
group_by(project_status) %>%
summarise(partners = n_distinct(implementing_partner),
beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(`%_beneficiaries` = round(beneficiaries / sum(beneficiaries) * 100, digits = 2)) %>%
flextable() %>%
set_caption("14 partners have reported planned activities") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .6)
498,502 + 64,868
498502 + 64868
563370/662924
cbr %>%
filter(project_status == "Completed") %>%
group_by(implementing_partner,
admin2pcode,
admin4pcode) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
group_by(implementing_partner) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
districts = n_distinct(admin2pcode),
communities = n_distinct(admin4pcode)) %>%
arrange(desc(beneficiaries)) %>%
flextable() %>%
set_caption("Reach and footprint of cash response actors") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .8) %>%
footnote(as_paragraph("Only partners who provided more than USD 100/family/month"),
i = 1, j = 1, part = "header", inline = TRUE, ref_symbols = "1")
cbr %>%
filter(project_status == "Completed" & previously_assisted == "No") %>%
group_by(implementing_partner,
admin2pcode,
admin4pcode) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
group_by(implementing_partner) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
districts = n_distinct(admin2pcode),
communities = n_distinct(admin4pcode)) %>%
arrange(desc(beneficiaries)) %>%
flextable() %>%
set_caption("Reach and footprint of cash response actors") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .8) %>%
footnote(as_paragraph("Only partners who provided more than USD 100/family/month"),
i = 1, j = 1, part = "header", inline = TRUE, ref_symbols = "1")
# Think of another way to do this -- if someone else runs this, it won't work
cbr <- read_csv("./data/cbr_com.csv") %>%
mutate(month = month(distribution_date)) %>%
replace_na(list(beneficiaries = 0)) %>%
mutate(governorate = recode(governorate,
"aleppo" = "Aleppo"),
district = recode(district,
"Jabal Samman" = "Jebel Saman",
"azaz" = "A'zaz",
"jarablus" = "Jarablus"),
sub_district = recode(sub_district,
"azaz" = "A'zaz",
"jarablus" = "Jarablus"),
# Doing this because Ar-Raqqa has never appeared before
previously_assisted = ifelse(admin1pcode %in% c("SY11"),
"No",
previously_assisted),
# Just this one time, since they haven't appeared before
previously_assisted = ifelse(implementing_partner == "CBRTWG-033",
"No",
previously_assisted))
sum_stats <- cbr  %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose")) %>%
summarise(partners = n_distinct(implementing_partner),
communities = n_distinct(admin4pcode),
households = sum(families, na.rm = TRUE),
beneficiaries = sum(beneficiaries[previously_assisted == "No"], na.rm = TRUE),
total_usd = sum(total_usd, na.rm = TRUE),
.groups = "drop")
cbr  %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose")) %>%
group_by(governorate, district) %>%
summarise(partners = n_distinct(implementing_partner),
communities = n_distinct(admin4pcode),
households = sum(families, na.rm = TRUE),
beneficiaries = sum(beneficiaries[previously_assisted == "No"], na.rm = TRUE),
total_usd = sum(total_usd, na.rm = TRUE)) %>%
ungroup() %>%
mutate(`%_BNF` =
round(beneficiaries / sum(beneficiaries, na.rm = TRUE) * 100, digits = 2),
total_usd = round(total_usd)) %>%
adorn_totals("row",,,, households, beneficiaries, total_usd, `%_BNF`) %>%
mutate(`%_BNF` = ifelse(`%_BNF` > 99.98, 100, `%_BNF`)) %>%
select(governorate, district, communities, partners,
households, beneficiaries, total_usd, `%_BNF`) %>%
flextable() %>%
set_caption(paste0(
round(sum_stats$beneficiaries, digits = -3) %>% format(big.mark = ","),
" people reached with MPC, USD ",
paste(format(round((sum_stats %>% pull(total_usd)) / 1000000, 1), trim = TRUE), "million"),
" disbursed, ",
report_date)) %>%
theme_zebra() %>%
#  footnote(i = 1, j = 6, part = "header", ref_symbols = "a",
#           as_paragraph("Beneficiary figures include only reported MPC with a minimum transfer value #of USD 100")) %>%
footnote(i = 1, j = 8, part = "header", ref_symbols = "b", inline = TRUE,
as_paragraph("As percentage of all MPC beneficiaries reached in NW Syria"))
cbr %>%
filter(!is.na(distribution_date)) %>%
mutate(distribution_date = anydate(distribution_date)) %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(distribution_date) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(distribution_date) %>%
filter(distribution_date  > "2022-12-30" & distribution_date < "2023-05-01") %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
mutate(cum_label = ifelse(distribution_date == "2023-02-09" |
distribution_date == "2023-03-02" |
distribution_date == "2023-03-30"|
distribution_date == "2023-04-15"|
distribution_date == "2023-04-30",
cum_ben, ""),
cum_label = as.numeric(cum_label),
distribution_date = anydate(distribution_date)) %>%
ggplot(aes(x = distribution_date, y = cum_ben)) +
geom_line(colour = "blue") +
geom_text(aes(label = scales::comma(cum_label)), vjust = -.6,
size = 4) +
scale_x_date(date_breaks = "1 week", date_labels = "%d-%b") +
# Why didn't you learn this before?
scale_y_continuous(labels = comma, expand = expansion(mult = .1)) +
labs(x = "Distribution date",
y = "Cumulative beneficiaries",
title = "MPC progress by date",
subtitle = "The earliest earthquake-related distribution was 2023-02-09\nExcludes 19,887 beneficiaries for which the date was not reported or was unreadable")
499957-480070
cbr %>%
filter(project_status == "Completed" & previously_assisted == "No") %>%
group_by(implementing_partner,
admin2pcode,
admin4pcode) %>%
slice(which.max(beneficiaries)) %>%
ungroup() %>%
group_by(implementing_partner) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE),
districts = n_distinct(admin2pcode),
communities = n_distinct(admin4pcode)) %>%
arrange(desc(beneficiaries)) %>%
flextable() %>%
set_caption("Reach and footprint of cash response actors") %>%
theme_zebra() %>%
set_table_properties(layout = "autofit", width = .8) %>%
footnote(as_paragraph("Only partners who provided more than USD 100/family/month"),
i = 1, j = 1, part = "header", inline = TRUE, ref_symbols = "1")
cbr %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose")) %>%
group_by(implementing_partner) %>%
summarise(total_usd = sum(total_usd, na.rm = TRUE),
families = sum(families, na.rm = TRUE)) %>%
mutate(usd_per_fam = round(total_usd / families, digits = 2),
`%_usd_total` = round(total_usd / sum(total_usd) * 100,
digits = 2),
total_usd = round(total_usd)) %>%
arrange(desc(total_usd)) %>%
flextable() %>%
set_caption("USD disbursed and families reached by partner") %>%
theme_zebra() %>%
flextable::set_table_properties(layout = "autofit", width = .8)
cbr %>%
filter(!is.na(distribution_date)) %>%
mutate(distribution_date = anydate(distribution_date)) %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(distribution_date) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(distribution_date) %>%
filter(distribution_date  > "2022-12-30" & distribution_date < "2023-05-01") %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
mutate(cum_label = ifelse(distribution_date == "2023-02-09" |
distribution_date == "2023-03-02" |
distribution_date == "2023-03-30"|
distribution_date == "2023-04-15"|
distribution_date == "2023-04-30",
cum_ben, ""),
cum_label = as.numeric(cum_label),
distribution_date = anydate(distribution_date))
cbr %>%
filter(!is.na(distribution_date)) %>%
mutate(distribution_date = anydate(distribution_date)) %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(distribution_date) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(distribution_date) %>%
filter(distribution_date  > "2022-12-30" & distribution_date < "2023-05-01") %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
mutate(cum_label = ifelse(distribution_date == "2023-02-10" |
distribution_date == "2023-03-02" |
distribution_date == "2023-03-30"|
distribution_date == "2023-04-15"|
distribution_date == "2023-04-30",
cum_ben, ""),
cum_label = as.numeric(cum_label),
distribution_date = anydate(distribution_date)) %>%
ggplot(aes(x = distribution_date, y = cum_ben)) +
geom_line(colour = "blue") +
geom_text(aes(label = scales::comma(cum_label)), vjust = -.6,
size = 4) +
scale_x_date(date_breaks = "1 week", date_labels = "%d-%b") +
# Why didn't you learn this before?
scale_y_continuous(labels = comma, expand = expansion(mult = .1)) +
labs(x = "Distribution date",
y = "Cumulative beneficiaries",
title = "MPC progress by date",
subtitle = "The earliest earthquake-related distribution was 2023-02-09\nExcludes 19,887 beneficiaries for which the date was not reported or was unreadable")
cbr %>%
filter(!is.na(distribution_date)) %>%
mutate(distribution_date = anydate(distribution_date)) %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(distribution_date) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(distribution_date) %>%
filter(distribution_date  > "2022-12-30" & distribution_date < "2023-05-01") %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
mutate(cum_label = ifelse(distribution_date == "2023-02-10" |
distribution_date == "2023-03-02" |
distribution_date == "2023-03-30"|
distribution_date == "2023-04-15"|
distribution_date == "2023-04-30",
cum_ben, ""),
cum_label = as.numeric(cum_label),
distribution_date = anydate(distribution_date))
cbr %>%
filter(!is.na(distribution_date)) %>%
mutate(distribution_date = anydate(distribution_date)) %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(distribution_date) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(distribution_date) %>%
filter(distribution_date  > "2022-12-30" & distribution_date < "2023-05-01") %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
mutate(cum_label = ifelse(distribution_date == "2023-02-10" |
distribution_date == "2023-03-01" |
distribution_date == "2023-03-30"|
distribution_date == "2023-04-15"|
distribution_date == "2023-04-30",
cum_ben, ""),
cum_label = as.numeric(cum_label),
distribution_date = anydate(distribution_date)) %>%
ggplot(aes(x = distribution_date, y = cum_ben)) +
geom_line(colour = "blue") +
geom_text(aes(label = scales::comma(cum_label)), vjust = -.8,
size = 4) +
scale_x_date(date_breaks = "1 week", date_labels = "%d-%b") +
# Why didn't you learn this before?
scale_y_continuous(labels = comma, expand = expansion(mult = .1)) +
labs(x = "Distribution date",
y = "Cumulative beneficiaries",
title = "MPC progress by date",
subtitle = "The earliest earthquake-related distribution was 2023-02-09\nExcludes 19,887 beneficiaries for which the date was not reported or was unreadable")
cbr %>%
filter(!is.na(distribution_date)) %>%
mutate(distribution_date = anydate(distribution_date)) %>%
filter(project_status == "Completed" &
str_detect(cluster, "Multipurpose") &
previously_assisted == "No") %>%
group_by(distribution_date) %>%
summarise(beneficiaries = sum(beneficiaries)) %>%
arrange(distribution_date) %>%
filter(distribution_date  > "2022-12-30" & distribution_date < "2023-05-01") %>%
mutate(cum_ben = cumsum(beneficiaries)) %>%
mutate(cum_label = ifelse(distribution_date == "2023-02-10" |
distribution_date == "2023-03-01" |
distribution_date == "2023-03-30"|
distribution_date == "2023-04-15"|
distribution_date == "2023-04-30",
cum_ben, ""),
cum_label = as.numeric(cum_label),
distribution_date = anydate(distribution_date)) %>%
ggplot(aes(x = distribution_date, y = cum_ben)) +
geom_line(colour = "blue") +
geom_text(aes(label = scales::comma(cum_label)), vjust = -1,
size = 4) +
scale_x_date(date_breaks = "1 week", date_labels = "%d-%b") +
# Why didn't you learn this before?
scale_y_continuous(labels = comma, expand = expansion(mult = .1)) +
labs(x = "Distribution date",
y = "Cumulative beneficiaries",
title = "MPC progress by date",
subtitle = "The earliest earthquake-related distribution was 2023-02-09\nExcludes 19,887 beneficiaries for which the date was not reported or was unreadable")
cbr %>% filter(project_status != "Suspended" & str_detect(cluster, "Multipurpose") & previously_assisted == "No") %>% {sum(.$beneficiaries)}
(cbr %>% filter(project_status != "Suspended" & str_detect(cluster, "Multipurpose") & previously_assisted == "No") %>% {sum(.$beneficiaries)}) / 662924 %>% round(. * 100, digits = 0)
((cbr %>% filter(project_status != "Suspended" & str_detect(cluster, "Multipurpose") & previously_assisted == "No") %>% {sum(.$beneficiaries)}) / 662924) %>% round(. * 100, digits = 0)
round((cbr %>% filter(project_status != "Suspended" & str_detect(cluster, "Multipurpose") & previously_assisted == "No") %>% {sum(.$beneficiaries)}) / 662924 * 100, digits = 0)
cbr %>%
filter(project_status == "Planned" & str_detect(cluster, "Multipurpose")) %>%
mutate(month = month(distribution_date, label = TRUE),
month = as.character(month)) %>%
mutate(month = ifelse(month %in% c("Feb", "Mar") | is.na(month), "NA", month)) %>%
group_by(month) %>%
summarise(beneficiaries = sum(beneficiaries, na.rm = TRUE)) %>%
mutate(month = factor(month, c("Apr", "May", "Jun", "Dec", "NA"))) %>%
arrange(month) %>%
flextable() %>%
theme_zebra() %>%
set_caption("Planned beneficiaries by month") %>%
footnote(i = 1, j = 1, inline = TRUE, ref_symbols = "1", part = "header",
value = as_paragraph("Some dates are missing or improperly encoded")) %>%
set_table_properties(layout = "autofit", width = .5)
